import{_ as r,M as p,p as k,q as u,N as a,R as s,t as n,V as i,a1 as t}from"./framework-7db056f4.js";const d="/PolarDB-for-PostgreSQL/assets/68_htap_single_result-a4f2cd86.png",m="/PolarDB-for-PostgreSQL/assets/69_htap_px_result-55983fa4.png",b="/PolarDB-for-PostgreSQL/assets/70_tpch_error_picture-6d70cb8d.png",g={},w=s("h1",{id:"利用-polardb-htap-加速-tpc-h",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#利用-polardb-htap-加速-tpc-h","aria-hidden":"true"},"#"),n(" 利用 PolarDB HTAP 加速 TPC-H")],-1),h=s("p",null,"在本文，我们将基于单机本地存储，利用 PolarDB for PostgreSQL 的 HTAP 能力来加速 TPC-H 的执行。",-1),v=s("h2",{id:"前期准备",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#前期准备","aria-hidden":"true"},"#"),n(" 前期准备")],-1),y=s("h3",{id:"部署-polardb-pg",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#部署-polardb-pg","aria-hidden":"true"},"#"),n(" 部署 PolarDB PG")],-1),_=t(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">docker</span> pull polardb/polardb_pg_local_instance:htap
<span class="token function">docker</span> run <span class="token parameter variable">-it</span> <span class="token punctuation">\\</span>
    --cap-add<span class="token operator">=</span>SYS_PTRACE <span class="token punctuation">\\</span>
    <span class="token parameter variable">--privileged</span><span class="token operator">=</span>true <span class="token punctuation">\\</span>
    <span class="token parameter variable">--name</span> polardb_pg_htap <span class="token punctuation">\\</span>
    --shm-size<span class="token operator">=</span>512m <span class="token punctuation">\\</span>
    polardb/polardb_pg_local_instance:htap <span class="token punctuation">\\</span>
    <span class="token function">bash</span>
</code></pre></div><p>HTAP 实例包含一个运行在 5432 端口的读写节点和两个运行在 5433、5434 端口的只读节点：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">ps</span> <span class="token parameter variable">-efww</span>
postgres      <span class="token number">9</span>      <span class="token number">1</span>  <span class="token number">1</span> 06:14 pts/0    00:00:01 /home/postgres/tmp_basedir_polardb_pg_1100_bld/bin/postgres <span class="token parameter variable">-D</span> /home/postgres/tmp_master_dir_polardb_pg_1100_bld
postgres     <span class="token number">10</span>      <span class="token number">9</span>  <span class="token number">0</span> 06:14 ?        00:00:00 postgres<span class="token punctuation">(</span><span class="token number">5432</span><span class="token punctuation">)</span>: logger  <span class="token number">0</span>
postgres     <span class="token number">11</span>      <span class="token number">9</span>  <span class="token number">0</span> 06:14 ?        00:00:00 postgres<span class="token punctuation">(</span><span class="token number">5432</span><span class="token punctuation">)</span>: logger  <span class="token number">1</span>
postgres     <span class="token number">12</span>      <span class="token number">9</span>  <span class="token number">0</span> 06:14 ?        00:00:00 postgres<span class="token punctuation">(</span><span class="token number">5432</span><span class="token punctuation">)</span>: logger  <span class="token number">2</span>
<span class="token punctuation">..</span>.
postgres     <span class="token number">33</span>      <span class="token number">1</span>  <span class="token number">1</span> 06:14 pts/0    00:00:01 /home/postgres/tmp_basedir_polardb_pg_1100_bld/bin/postgres <span class="token parameter variable">-D</span> /home/postgres/tmp_replica_dir_polardb_pg_1100_bld1
postgres     <span class="token number">34</span>     <span class="token number">33</span>  <span class="token number">0</span> 06:15 ?        00:00:00 postgres<span class="token punctuation">(</span><span class="token number">5433</span><span class="token punctuation">)</span>: logger  <span class="token number">0</span>
postgres     <span class="token number">35</span>     <span class="token number">33</span>  <span class="token number">0</span> 06:15 ?        00:00:00 postgres<span class="token punctuation">(</span><span class="token number">5433</span><span class="token punctuation">)</span>: logger  <span class="token number">1</span>
postgres     <span class="token number">36</span>     <span class="token number">33</span>  <span class="token number">0</span> 06:15 ?        00:00:00 postgres<span class="token punctuation">(</span><span class="token number">5433</span><span class="token punctuation">)</span>: logger  <span class="token number">2</span>
<span class="token punctuation">..</span>.
postgres     <span class="token number">48</span>      <span class="token number">1</span>  <span class="token number">1</span> 06:15 pts/0    00:00:01 /home/postgres/tmp_basedir_polardb_pg_1100_bld/bin/postgres <span class="token parameter variable">-D</span> /home/postgres/tmp_replica_dir_polardb_pg_1100_bld2
postgres     <span class="token number">49</span>     <span class="token number">48</span>  <span class="token number">0</span> 06:15 ?        00:00:00 postgres<span class="token punctuation">(</span><span class="token number">5434</span><span class="token punctuation">)</span>: logger  <span class="token number">0</span>
postgres     <span class="token number">50</span>     <span class="token number">48</span>  <span class="token number">0</span> 06:15 ?        00:00:00 postgres<span class="token punctuation">(</span><span class="token number">5434</span><span class="token punctuation">)</span>: logger  <span class="token number">1</span>
postgres     <span class="token number">51</span>     <span class="token number">48</span>  <span class="token number">0</span> 06:15 ?        00:00:00 postgres<span class="token punctuation">(</span><span class="token number">5434</span><span class="token punctuation">)</span>: logger  <span class="token number">2</span>
</code></pre></div><h3 id="生成-tpc-h-测试数据集" tabindex="-1"><a class="header-anchor" href="#生成-tpc-h-测试数据集" aria-hidden="true">#</a> 生成 TPC-H 测试数据集</h3>`,4),P={href:"https://www.tpc.org/tpch/default5.asp",target:"_blank",rel:"noopener noreferrer"},q={href:"https://github.com/HBKO/tpch-dbgen",target:"_blank",rel:"noopener noreferrer"},x=t(`<div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone https://github.com/HBKO/tpch-dbgen.git
<span class="token builtin class-name">cd</span> tpch-dbgen
</code></pre></div><h4 id="根据默认值创建-tpc-h-数据集" tabindex="-1"><a class="header-anchor" href="#根据默认值创建-tpc-h-数据集" aria-hidden="true">#</a> 根据默认值创建 TPC-H 数据集</h4><p>通过如下命令，生成默认值下的 TPC-H 数据集。默认生成的 TPC-H 数据集共有 10GB 数据，会直接连接到正在运行的 PolarDB for PostgreSQL 数据库，并完成导入数据、创建约束、创建 TPC-H SQL 的步骤。</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 导入 10GB 数据的时间较长，一般要 20-30 分钟左右，请耐心等待</span>
./build.sh
</code></pre></div><h4 id="定制化的创建-tpc-h-数据集" tabindex="-1"><a class="header-anchor" href="#定制化的创建-tpc-h-数据集" aria-hidden="true">#</a> 定制化的创建 TPC-H 数据集</h4><p><code>build.sh</code> 脚本中各个参数的含义如下：</p><ul><li><code>--user</code>：数据库用户名</li><li><code>--db</code>：数据库名</li><li><code>--host</code>：数据库主机地址，默认为 localhost</li><li><code>--port</code>：数据库服务端口</li><li><code>--run</code>：默认执行所有 TPC-H 查询，或执行某条特定的 TPC-H 查询</li><li><code>--option</code>：额外指定 GUC 参数</li><li><code>--scale</code>：代表生成 TPC-H 数据集大小，单位为 GB</li></ul><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>$ ./build.sh <span class="token parameter variable">--help</span>

  <span class="token number">1</span><span class="token punctuation">)</span> Use default configuration to build
  ./build.sh
  <span class="token number">2</span><span class="token punctuation">)</span> Use limited configuration to build
  ./build.sh <span class="token parameter variable">--user</span><span class="token operator">=</span>postgres <span class="token parameter variable">--db</span><span class="token operator">=</span>postgres <span class="token parameter variable">--host</span><span class="token operator">=</span>localhost <span class="token parameter variable">--port</span><span class="token operator">=</span><span class="token number">5432</span> <span class="token parameter variable">--scale</span><span class="token operator">=</span><span class="token number">1</span>
  <span class="token number">3</span><span class="token punctuation">)</span> Run the <span class="token builtin class-name">test</span> <span class="token keyword">case</span>
  ./build.sh <span class="token parameter variable">--run</span>
  <span class="token number">4</span><span class="token punctuation">)</span> Run the target <span class="token builtin class-name">test</span> <span class="token keyword">case</span>
  ./build.sh <span class="token parameter variable">--run</span><span class="token operator">=</span><span class="token number">3</span>. run the 3rd case.
  <span class="token number">5</span><span class="token punctuation">)</span> Run the target <span class="token builtin class-name">test</span> <span class="token keyword">case</span> with option
  ./build.sh <span class="token parameter variable">--run</span> <span class="token parameter variable">--option</span><span class="token operator">=</span><span class="token string">&quot;set polar_enable_px = on;&quot;</span>
  <span class="token number">6</span><span class="token punctuation">)</span> Clean the <span class="token builtin class-name">test</span> data. This step will drop the database or tables, remove csv
  and tbl files
  ./build.sh <span class="token parameter variable">--clean</span>
  <span class="token number">7</span><span class="token punctuation">)</span> Quick build tpch with 100MB
  ./build.sh <span class="token parameter variable">--scacle</span><span class="token operator">=</span><span class="token number">0.1</span>
</code></pre></div><p>通过设置不同的参数，可以定制化地创建不同大小的 TPC-H 数据集，并写入到指定的数据库中，这个脚本要求能够免密登录数据库。如果需要指定登录密码：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">export</span> <span class="token assign-left variable">PGPASSWORD</span><span class="token operator">=</span><span class="token operator">&lt;</span>your password<span class="token operator">&gt;</span>
<span class="token builtin class-name">source</span> ~/.bashrc
</code></pre></div><p>连接到数据库，对刚才创建的表设置最大查询并行度，否则将不会进入 PX 查询：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> <span class="token keyword">table</span> nation <span class="token keyword">set</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> region <span class="token keyword">set</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> supplier <span class="token keyword">set</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> part <span class="token keyword">set</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> partsupp <span class="token keyword">set</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> customer <span class="token keyword">set</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> orders <span class="token keyword">set</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">alter</span> <span class="token keyword">table</span> lineitem <span class="token keyword">set</span> <span class="token punctuation">(</span>px_workers <span class="token operator">=</span> <span class="token number">100</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="执行-postgresql-单机并行执行" tabindex="-1"><a class="header-anchor" href="#执行-postgresql-单机并行执行" aria-hidden="true">#</a> 执行 PostgreSQL 单机并行执行</h2><p>接下来以 TPC-H Q18 为例来进行演示。数据导入到 PolarDB 后，我们先执行 PostgreSQL 单机并行查询，观测一下查询速度。</p><ol><li><p><code>psql</code> 连入后，执行如下命令，开启计时。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>\\timing <span class="token keyword">on</span>
</code></pre></div></li><li><p>通过 <code>max_parallel_workers_per_gather</code> 参数设置单机并行度为 2：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> max_parallel_workers_per_gather<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>执行如下命令，查看执行计划：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">explain</span><span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre></div><p>可以看到如图所示的 2 个并行度的并行计划：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>																		QUERY <span class="token keyword">PLAN</span>
<span class="token comment">-----------------------------------------------------------------------------------------------------------------------------------------------------------------</span>
 <span class="token keyword">Limit</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">9364138.51</span><span class="token punctuation">.</span><span class="token number">.9364141</span><span class="token number">.51</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">100</span> width<span class="token operator">=</span><span class="token number">71</span><span class="token punctuation">)</span>
   <span class="token operator">-</span><span class="token operator">&gt;</span>  GroupAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">9364138.51</span><span class="token punctuation">.</span><span class="token number">.9380736</span><span class="token number">.94</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">553281</span> width<span class="token operator">=</span><span class="token number">71</span><span class="token punctuation">)</span>
	   	<span class="token keyword">Group</span> <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_totalprice<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderdate<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_name<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_custkey<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderkey
		   <span class="token operator">-</span><span class="token operator">&gt;</span>  Sort  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">9364138.51</span><span class="token punctuation">.</span><span class="token number">.9365521</span><span class="token number">.71</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">553281</span> width<span class="token operator">=</span><span class="token number">44</span><span class="token punctuation">)</span>
			   Sort <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_totalprice <span class="token keyword">DESC</span><span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderdate<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_name<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_custkey<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderkey
			   <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span> <span class="token keyword">Join</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">6752588.87</span><span class="token punctuation">.</span><span class="token number">.9294341</span><span class="token number">.50</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">553281</span> width<span class="token operator">=</span><span class="token number">44</span><span class="token punctuation">)</span>
			   		<span class="token keyword">Hash</span> Cond: <span class="token punctuation">(</span>lineitem<span class="token punctuation">.</span>l_orderkey <span class="token operator">=</span> orders<span class="token punctuation">.</span>o_orderkey<span class="token punctuation">)</span>
				   	<span class="token operator">-</span><span class="token operator">&gt;</span>  Seq Scan <span class="token keyword">on</span> lineitem  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.1724338</span><span class="token number">.96</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">59979696</span> width<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>
		   			<span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">6749642.22</span><span class="token punctuation">.</span><span class="token number">.6749642</span><span class="token number">.22</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">138372</span> width<span class="token operator">=</span><span class="token number">43</span><span class="token punctuation">)</span>
			   			<span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span> <span class="token keyword">Join</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">6110531.76</span><span class="token punctuation">.</span><span class="token number">.6749642</span><span class="token number">.22</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">138372</span> width<span class="token operator">=</span><span class="token number">43</span><span class="token punctuation">)</span>
				   				<span class="token keyword">Hash</span> Cond: <span class="token punctuation">(</span>orders<span class="token punctuation">.</span>o_custkey <span class="token operator">=</span> customer<span class="token punctuation">.</span>c_custkey<span class="token punctuation">)</span>
					   			<span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span> <span class="token keyword">Join</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">6032162.96</span><span class="token punctuation">.</span><span class="token number">.6658785</span><span class="token number">.84</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">138372</span> width<span class="token operator">=</span><span class="token number">24</span><span class="token punctuation">)</span>
						   			<span class="token keyword">Hash</span> Cond: <span class="token punctuation">(</span>orders<span class="token punctuation">.</span>o_orderkey <span class="token operator">=</span> lineitem_1<span class="token punctuation">.</span>l_orderkey<span class="token punctuation">)</span>
							   		<span class="token operator">-</span><span class="token operator">&gt;</span>  Seq Scan <span class="token keyword">on</span> orders  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.410917</span><span class="token number">.44</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">15000544</span> width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
							   		<span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">6029892.31</span><span class="token punctuation">.</span><span class="token number">.6029892</span><span class="token number">.31</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">138372</span> width<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
								   			<span class="token operator">-</span><span class="token operator">&gt;</span>  Finalize GroupAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">5727599.96</span><span class="token punctuation">.</span><span class="token number">.6028508</span><span class="token number">.59</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">138372</span> width<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
						   						<span class="token keyword">Group</span> <span class="token keyword">Key</span>: lineitem_1<span class="token punctuation">.</span>l_orderkey
							   					Filter: <span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span>lineitem_1<span class="token punctuation">.</span>l_quantity<span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token string">&#39;313&#39;</span>::<span class="token keyword">numeric</span><span class="token punctuation">)</span>
						   						<span class="token operator">-</span><span class="token operator">&gt;</span>  Gather <span class="token keyword">Merge</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">5727599.96</span><span class="token punctuation">.</span><span class="token number">.6016055</span><span class="token number">.08</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">830234</span> width<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>
   														Workers Planned: <span class="token number">2</span>
   														<span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> GroupAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">5726599.94</span><span class="token punctuation">.</span><span class="token number">.5919225</span><span class="token number">.45</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">415117</span> width<span class="token operator">=</span><span class="token number">36</span><span class="token punctuation">)</span>
	   														<span class="token keyword">Group</span> <span class="token keyword">Key</span>: lineitem_1<span class="token punctuation">.</span>l_orderkey
   															<span class="token operator">-</span><span class="token operator">&gt;</span>  Sort  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">5726599.94</span><span class="token punctuation">.</span><span class="token number">.5789078</span><span class="token number">.79</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">24991540</span> width<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>
   																	Sort <span class="token keyword">Key</span>: lineitem_1<span class="token punctuation">.</span>l_orderkey
   																	<span class="token operator">-</span><span class="token operator">&gt;</span>  Parallel Seq Scan <span class="token keyword">on</span> lineitem lineitem_1  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.1374457</span><span class="token number">.40</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">24991540</span> width<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>
	   							<span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">50827.80</span><span class="token punctuation">.</span><span class="token number">.50827</span><span class="token number">.80</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">1500080</span> width<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">)</span>
   									<span class="token operator">-</span><span class="token operator">&gt;</span>  Seq Scan <span class="token keyword">on</span> customer  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.50827</span><span class="token number">.80</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">1500080</span> width<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token number">27</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行 SQL，可以看到执行结果和运行时间，运行时间为 1 分 23 秒：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">sql</span>
</code></pre></div><p><img src="`+d+`" alt="18-exec"></p></li></ol><h2 id="执行-polardb-htap-单机并行执行" tabindex="-1"><a class="header-anchor" href="#执行-polardb-htap-单机并行执行" aria-hidden="true">#</a> 执行 PolarDB HTAP 单机并行执行</h2><p>在体验完单机并行查询后，我们开启 PolarDB HTAP 的并行执行，在单机上体验一下查询性能。</p><ol><li><p>在 psql 后，执行如下命令，开启计时。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>\\timing <span class="token keyword">on</span>
</code></pre></div></li><li><p>执行如下命令，开启跨机并行查询（PX）。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> polar_enable_px<span class="token operator">=</span><span class="token keyword">on</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>设置每个节点的并行度为 1。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> polar_px_dop_per_node<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">;</span>
</code></pre></div></li><li><p>执行如下命令，查看执行计划。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">explain</span><span class="token punctuation">.</span><span class="token keyword">sql</span>
</code></pre></div><p>当前集群带有 2 个 RO 节点，开启 PX 后默认并行度为 <code>2 x 1 = 2</code> 个：</p><div class="language-sql line-numbers-mode" data-ext="sql"><pre class="language-sql"><code>                                                                                           QUERY <span class="token keyword">PLAN</span>
<span class="token comment">-------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------</span>

 <span class="token keyword">Limit</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.93628</span><span class="token number">.34</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">100</span> width<span class="token operator">=</span><span class="token number">47</span><span class="token punctuation">)</span>
   <span class="token operator">-</span><span class="token operator">&gt;</span>  PX Coordinator <span class="token number">2</span>:<span class="token number">1</span>  <span class="token punctuation">(</span>slice1<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.93628</span><span class="token number">.33</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">100</span> width<span class="token operator">=</span><span class="token number">47</span><span class="token punctuation">)</span>
         <span class="token keyword">Merge</span> <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_totalprice<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderdate
         <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Limit</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.93628</span><span class="token number">.31</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">50</span> width<span class="token operator">=</span><span class="token number">47</span><span class="token punctuation">)</span>
               <span class="token operator">-</span><span class="token operator">&gt;</span>  GroupAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.93628</span><span class="token number">.31</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">11995940</span> width<span class="token operator">=</span><span class="token number">47</span><span class="token punctuation">)</span>
                     <span class="token keyword">Group</span> <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_totalprice<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderdate<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_name<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_custkey<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderkey
                     <span class="token operator">-</span><span class="token operator">&gt;</span>  Sort  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.92784</span><span class="token number">.19</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">11995940</span> width<span class="token operator">=</span><span class="token number">44</span><span class="token punctuation">)</span>
                           Sort <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_totalprice <span class="token keyword">DESC</span><span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderdate<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_name<span class="token punctuation">,</span> customer<span class="token punctuation">.</span>c_custkey<span class="token punctuation">,</span> orders<span class="token punctuation">.</span>o_orderkey
                           <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span> <span class="token keyword">Join</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.22406</span><span class="token number">.63</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">11995940</span> width<span class="token operator">=</span><span class="token number">44</span><span class="token punctuation">)</span>
                                 <span class="token keyword">Hash</span> Cond: <span class="token punctuation">(</span>lineitem<span class="token punctuation">.</span>l_orderkey <span class="token operator">=</span> orders<span class="token punctuation">.</span>o_orderkey<span class="token punctuation">)</span>
                                 <span class="token operator">-</span><span class="token operator">&gt;</span>  PX <span class="token keyword">Hash</span> <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice2<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.4301</span><span class="token number">.49</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">29989848</span> width<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>
                                       <span class="token keyword">Hash</span> <span class="token keyword">Key</span>: lineitem<span class="token punctuation">.</span>l_orderkey
                                       <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> Seq Scan <span class="token keyword">on</span> lineitem  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.2954</span><span class="token number">.65</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">29989848</span> width<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>
                                 <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">10799.35</span><span class="token punctuation">.</span><span class="token number">.10799</span><span class="token number">.35</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">83024</span> width<span class="token operator">=</span><span class="token number">39</span><span class="token punctuation">)</span>
                                       <span class="token operator">-</span><span class="token operator">&gt;</span>  PX <span class="token keyword">Hash</span> <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice3<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.10799</span><span class="token number">.35</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">83024</span> width<span class="token operator">=</span><span class="token number">39</span><span class="token punctuation">)</span>
                                             <span class="token keyword">Hash</span> <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_orderkey
                                             <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span> <span class="token keyword">Join</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.10789</span><span class="token number">.21</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">83024</span> width<span class="token operator">=</span><span class="token number">39</span><span class="token punctuation">)</span>
                                                   <span class="token keyword">Hash</span> Cond: <span class="token punctuation">(</span>customer<span class="token punctuation">.</span>c_custkey <span class="token operator">=</span> orders<span class="token punctuation">.</span>o_custkey<span class="token punctuation">)</span>
                                                   <span class="token operator">-</span><span class="token operator">&gt;</span>  PX <span class="token keyword">Hash</span> <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice4<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.597</span><span class="token number">.52</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">750040</span> width<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">)</span>
                                                         <span class="token keyword">Hash</span> <span class="token keyword">Key</span>: customer<span class="token punctuation">.</span>c_custkey
                                                         <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> Seq Scan <span class="token keyword">on</span> customer  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.511</span><span class="token number">.44</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">750040</span> width<span class="token operator">=</span><span class="token number">23</span><span class="token punctuation">)</span>
                                                   <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">9993.50</span><span class="token punctuation">.</span><span class="token number">.9993</span><span class="token number">.50</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">83024</span> width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
                                                         <span class="token operator">-</span><span class="token operator">&gt;</span>  PX <span class="token keyword">Hash</span> <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice5<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.9993</span><span class="token number">.50</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">83024</span> width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
                                                               <span class="token keyword">Hash</span> <span class="token keyword">Key</span>: orders<span class="token punctuation">.</span>o_custkey
                                                               <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span> Semi <span class="token keyword">Join</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.9988</span><span class="token number">.30</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">83024</span> width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
                                                                     <span class="token keyword">Hash</span> Cond: <span class="token punctuation">(</span>orders<span class="token punctuation">.</span>o_orderkey <span class="token operator">=</span> lineitem_1<span class="token punctuation">.</span>l_orderkey<span class="token punctuation">)</span>
                                                                     <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> Seq Scan <span class="token keyword">on</span> orders  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.1020</span><span class="token number">.90</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">7500272</span> width<span class="token operator">=</span><span class="token number">20</span><span class="token punctuation">)</span>
                                                                     <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Hash</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">7256.00</span><span class="token punctuation">.</span><span class="token number">.7256</span><span class="token number">.00</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">166047</span> width<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
                                                                           <span class="token operator">-</span><span class="token operator">&gt;</span>  PX Broadcast <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice6<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.7256</span><span class="token number">.00</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">166047</span> width<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
                                                                                 <span class="token operator">-</span><span class="token operator">&gt;</span>  Result  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.7238</span><span class="token number">.62</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">83024</span> width<span class="token operator">=</span><span class="token number">4</span><span class="token punctuation">)</span>
                                                                                       Filter: <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span>lineitem_1<span class="token punctuation">.</span>l_quantity<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">&gt;</span> <span class="token string">&#39;313&#39;</span>::<span class="token keyword">numeric</span><span class="token punctuation">)</span>
                                                                                       <span class="token operator">-</span><span class="token operator">&gt;</span>  Finalize HashAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.7231</span><span class="token number">.79</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">207559</span> width<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
                                                                                             <span class="token keyword">Group</span> <span class="token keyword">Key</span>: lineitem_1<span class="token punctuation">.</span>l_orderkey
                                                                                             <span class="token operator">-</span><span class="token operator">&gt;</span>  PX <span class="token keyword">Hash</span> <span class="token number">2</span>:<span class="token number">2</span>  <span class="token punctuation">(</span>slice7<span class="token punctuation">;</span> segments: <span class="token number">2</span><span class="token punctuation">)</span>  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.7205</span><span class="token number">.20</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">207559</span> width<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
                                                                                                   <span class="token keyword">Hash</span> <span class="token keyword">Key</span>: lineitem_1<span class="token punctuation">.</span>l_orderkey
                                                                                                   <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> HashAggregate  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.7197</span><span class="token number">.41</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">207559</span> width<span class="token operator">=</span><span class="token number">12</span><span class="token punctuation">)</span>
                                                                                                         <span class="token keyword">Group</span> <span class="token keyword">Key</span>: lineitem_1<span class="token punctuation">.</span>l_orderkey
                                                                                                         <span class="token operator">-</span><span class="token operator">&gt;</span>  <span class="token keyword">Partial</span> Seq Scan <span class="token keyword">on</span> lineitem lineitem_1  <span class="token punctuation">(</span>cost<span class="token operator">=</span><span class="token number">0.00</span><span class="token punctuation">.</span><span class="token number">.2954</span><span class="token number">.65</span> <span class="token keyword">rows</span><span class="token operator">=</span><span class="token number">29989848</span> width<span class="token operator">=</span><span class="token number">9</span><span class="token punctuation">)</span>
Optimizer: PolarDB PX Optimizer
<span class="token punctuation">(</span><span class="token number">39</span> <span class="token keyword">rows</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>执行 SQL：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code>\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">sql</span>
</code></pre></div><p>可以看到执行结果和运行时间，运行时间为 1 分钟，比 PostgreSQL 的并行执行结果降低了 27.71% 的运行时间。加大并行度或者数据量，性能可以得到更明显的提升。</p><p><img src="`+m+`" alt="18-exec-px"></p><p>PX 并行查询会获取全局一致性视图，因此得到的数据是一致的，无需担心数据正确性。通过如下方式手动设置 PX 并行查询的并行度：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> polar_px_dop_per_node <span class="token operator">=</span> <span class="token number">2</span><span class="token punctuation">;</span>
\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">sql</span>

<span class="token keyword">set</span> polar_px_dop_per_node <span class="token operator">=</span> <span class="token number">4</span><span class="token punctuation">;</span>
\\i finals<span class="token operator">/</span><span class="token number">18.</span><span class="token keyword">sql</span>
</code></pre></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>通过 <code>\\i finals/[number].sql</code> 可以跑任意的 TPC-H SQL。如果想要跑完全量的 TPC-H SQL，可以通过 <code>./build.sh --run</code> 来运行。结果会输出在 result 文件中。</p><p>如果 q17、18 出现了 out of memory 的错误，可以尝试将 hashagg 关闭：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">set</span> polar_px_optimizer_enable_hashagg<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span>
</code></pre></div></div></li></ol><h2 id="执行-polardb-htap-跨机并行执行" tabindex="-1"><a class="header-anchor" href="#执行-polardb-htap-跨机并行执行" aria-hidden="true">#</a> 执行 PolarDB HTAP 跨机并行执行</h2><h3 id="启动结点" tabindex="-1"><a class="header-anchor" href="#启动结点" aria-hidden="true">#</a> 启动结点</h3><p>在能够访问共享存储并格式化 PFS 文件系统的三台主机上，分别启动读写节点和只读节点。验证主节点到只读结点的连通性。如果访问不通，请检查防火墙等网络配置。</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>更换 <code>&lt;ip_address&gt;</code> 和 <code>&lt;port&gt;</code> 为只读结点的 IP 地址和端口。</p></div><div class="language-bash" data-ext="sh"><pre class="language-bash"><code>psql <span class="token parameter variable">-h</span> <span class="token operator">&lt;</span>ip_address<span class="token operator">&gt;</span> <span class="token parameter variable">-p</span> <span class="token operator">&lt;</span>port<span class="token operator">&gt;</span> <span class="token parameter variable">-Upostgres</span> postgres
</code></pre></div><h3 id="设置主节点参数" tabindex="-1"><a class="header-anchor" href="#设置主节点参数" aria-hidden="true">#</a> 设置主节点参数</h3><p>进入主节点的 psql 命令行后，执行以下 SQL 语句配置跨机 HTAP 集群。更换 <code>&lt;ip_address_1&gt;</code>、<code>&lt;port_1&gt;</code> 和 <code>&lt;ip_address_2&gt;</code>、<code>&lt;port_2&gt;</code> 为两个只读结点的 IP 地址和端口。</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">alter</span> system <span class="token keyword">set</span> polar_cluster_map<span class="token operator">=</span><span class="token string">&#39;node1|&lt;ip_address_1&gt;|&lt;port_1&gt;,node2|&lt;ip_address_2&gt;|&lt;port_2&gt;&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">select</span> pg_reload_conf<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><h3 id="测试" tabindex="-1"><a class="header-anchor" href="#测试" aria-hidden="true">#</a> 测试</h3><p>以 TPC-H 为例，检查查询计划是否来自于 PolarDB 的 PX 优化器，并执行查询：</p><div class="language-sql" data-ext="sql"><pre class="language-sql"><code><span class="token keyword">explain</span> <span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> customer<span class="token punctuation">;</span>
<span class="token keyword">select</span> <span class="token function">count</span><span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">)</span> <span class="token keyword">from</span> customer<span class="token punctuation">;</span>
</code></pre></div><h3 id="常见错误" tabindex="-1"><a class="header-anchor" href="#常见错误" aria-hidden="true">#</a> 常见错误</h3><p>如果发现下面的错误，可以尝试统一修改每台机器的 MTU 为 9000：</p><div class="language-bash" data-ext="sh"><pre class="language-bash"><code><span class="token function">ifconfig</span> <span class="token operator">&lt;</span>网卡名<span class="token operator">&gt;</span> mtu <span class="token number">9000</span>
</code></pre></div><p><img src="`+b+'" alt="px-network-error"></p>',33);function f(o,H){const c=p("ArticleInfo"),l=p("RouterLink"),e=p("ExternalLinkIcon");return k(),u("div",null,[w,a(c,{frontmatter:o.$frontmatter},null,8,["frontmatter"]),h,v,y,s("p",null,[n("在运行前我们默认您已经通过 "),a(l,{to:"/deploying/db-localfs.html#%E6%9C%AC%E5%9C%B0%E5%A4%9A%E8%8A%82%E7%82%B9-htap-%E5%AE%9E%E4%BE%8B"},{default:i(()=>[n("前置文档")]),_:1}),n(" 部署好单机多节点 HTAP 实例。也可以直接从 DockerHub 上拉取 HTAP 实例镜像：")]),_,s("p",null,[s("a",P,[n("TPC-H"),a(e)]),n(" 是专门测试数据库分析型场景性能的数据集，一共有 22 条分析型场景下的 SQL。用 TPC-H 可以有效测试 PolarDB 的 HTAP 的能力。我们将通过 "),s("a",q,[n("tpch-dbgen"),a(e)]),n(" 工具来生成任意大小的数据集。")]),x])}const C=r(g,[["render",f],["__file","tpch-on-px.html.vue"]]);export{C as default};
